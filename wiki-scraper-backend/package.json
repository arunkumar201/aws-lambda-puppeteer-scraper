{
  "name": "wiki-scraper-backend",
  "version": "1.0.0",
  "description": "Scalable TypeScript backend for Wikipedia scraper with AWS Lambda support",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "scripts": {
    "clean": "rimraf dist",
    "clean:all": "rm -rf dist/ function.zip .aws-sam/",
    "format": "prettier --write \"src/**/*.ts\"",
    "lint": "eslint \"src/**/*.ts\"",
    "lint:fix": "eslint \"src/**/*.ts\" --fix",
    "build": "tsc",
    "invoke:local": "sam local invoke --event events/event.json",
    "test:local": "sam local start-api --env-vars env.json",
    "local:api": "DOCKER_HOST=unix://$HOME/.docker/run/docker.sock sam local start-api -t template.local.yaml --skip-pull-image --warm-containers LAZY --port 3000 --docker-network host",
    "local:invoke": "DOCKER_HOST=unix://$HOME/.docker/run/docker.sock sam local invoke -t template.local.yaml -e events/event.json --docker-network host",
    "dev": "nodemon src/index.ts",
    "start": "NODE_ENV=production node dist/index.js",
    "start:prod": "NODE_ENV=production node dist/index.js"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.540.0",
    "@aws-sdk/client-sqs": "^3.825.0",
    "@aws-sdk/s3-request-presigner": "^3.540.0",
    "@sparticuz/chromium": "^133.0.0",
    "@types/aws-lambda": "^8.10.149",
    "@types/compression": "^1.8.1",
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.3",
    "aws-lambda": "^1.0.7",
    "axios": "^1.6.2",
    "cheerio": "^1.0.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "esbuild": "^0.25.5",
    "express": "^4.18.2",
    "express-rate-limit": "^7.1.5",
    "express-serve-static-core": "^0.1.1",
    "helmet": "^7.1.0",
    "http-status": "^2.1.0",
    "http-status-codes": "^2.2.0",
    "puppeteer-core": "^22.15.0",
    "rimraf": "^6.0.1",
    "serverless-http": "^3.2.0",
    "uuid": "^11.1.0",
    "winston": "^3.11.0",
    "zod": "^3.25.56",
    "zod-to-json-schema": "^3.22.0"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "testMatch": [
      "**/tests/**/*.test.ts"
    ],
    "collectCoverage": true,
    "coverageDirectory": "coverage"
  }
}
