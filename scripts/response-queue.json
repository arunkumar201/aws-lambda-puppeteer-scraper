[
  {
    "job_id": "5bb81f4c-10e3-41a9-b11c-cf82099c28f2",
    "action": "wikipedia",
    "result": {
      "screenshot": "https://149536460382-ap-south-1-wiki-scraper-screenshots.s3.ap-south-1.amazonaws.com/screenshots/1749664457044-ddac1d5e-9b80-45af-a8df-2fbcb17cff8a.png",
      "markdown": "# API Routes\n\nAPI Routes Request Helpers\nAPI Routes with GraphQL\nAPI Routes with REST\nAPI Routes with CORS\n\n• API Routes Request Helpers\n\n• API Routes with GraphQL\n\n• API Routes with REST\n\n• API Routes with CORS\n\n> Good to know: If you are using the App Router, you can use Server Components or Route Handlers instead of API Routes.\n\nGood to know: If you are using the App Router, you can use Server Components or Route Handlers instead of API Routes.\n\nAPI routes provide a solution to build a public API with Next.js.\n\nAny file inside the folder pages/api is mapped to /api/* and will be treated as an API endpoint instead of a page. They are server-side only bundles and won't increase your client-side bundle size.\n\nFor example, the following API route returns a JSON response with a status code of 200:\n\n> Good to know:\n\nAPI Routes do not specify CORS headers, meaning they are same-origin only by default. You can customize such behavior by wrapping the request handler with the CORS request helpers.\n\nGood to know:\n\nAPI Routes do not specify CORS headers, meaning they are same-origin only by default. You can customize such behavior by wrapping the request handler with the CORS request helpers.\n\n• API Routes do not specify CORS headers, meaning they are same-origin only by default. You can customize such behavior by wrapping the request handler with the CORS request helpers.\n\nAPI Routes can't be used with static exports. However, Route Handlers in the App Router can.\n\n\nAPI Routes will be affected by pageExtensions configuration in next.config.js.\n\n• API Routes can't be used with static exports. However, Route Handlers in the App Router can.\n\n\nAPI Routes will be affected by pageExtensions configuration in next.config.js.\n\n> API Routes will be affected by pageExtensions configuration in next.config.js.\n\nAPI Routes will be affected by pageExtensions configuration in next.config.js.\n\n• API Routes will be affected by pageExtensions configuration in next.config.js.\n\n\n## Parameters\n\nreq: An instance of http.IncomingMessage\nres: An instance of http.ServerResponse\n\n• req: An instance of http.IncomingMessage\n\n• res: An instance of http.ServerResponse\n\n\n## HTTP Methods\n\nTo handle different HTTP methods in an API route, you can use req.method in your request handler, like so:\n\n\n## Request Helpers\n\nAPI Routes provide built-in request helpers which parse the incoming request (req):\n\nreq.cookies - An object containing the cookies sent by the request. Defaults to {}\nreq.query - An object containing the query string. Defaults to {}\nreq.body - An object containing the body parsed by content-type, or null if no body was sent\n\n• req.cookies - An object containing the cookies sent by the request. Defaults to {}\n\n• req.query - An object containing the query string. Defaults to {}\n\n• req.body - An object containing the body parsed by content-type, or null if no body was sent\n\n\n### Custom config\n\nEvery API Route can export a config object to change the default configuration, which is the following:\n\nbodyParser is automatically enabled. If you want to consume the body as a Stream or with raw-body, you can set this to false.\n\nOne use case for disabling the automatic bodyParsing is to allow you to verify the raw body of a webhook request, for example from GitHub.\n\nbodyParser.sizeLimit is the maximum size allowed for the parsed body, in any format supported by bytes, like so:\n\nexternalResolver is an explicit flag that tells the server that this route is being handled by an external resolver like express or connect. Enabling this option disables warnings for unresolved requests.\n\nresponseLimit is automatically enabled, warning when an API Routes' response body is over 4MB.\n\nIf you are not using Next.js in a serverless environment, and understand the performance implications of not using a CDN or dedicated media host, you can set this limit to false.\n\nresponseLimit can also take the number of bytes or any string format supported by bytes, for example 1000, '500kb' or '3mb'.\nThis value will be the maximum response size before a warning is displayed. Default is 4MB. (see above)\n\n\n## Response Helpers\n\nThe Server Response object, (often abbreviated as res) includes a set of Express.js-like helper methods to improve the developer experience and increase the speed of creating new API endpoints.\n\nThe included helpers are:\n\nres.status(code) - A function to set the status code. code must be a valid HTTP status code\nres.json(body) - Sends a JSON response. body must be a serializable object\nres.send(body) - Sends the HTTP response. body can be a string, an object or a Buffer\nres.redirect([status,] path) - Redirects to a specified path or URL. status must be a valid HTTP status code. If not specified, status defaults to \"307\" \"Temporary redirect\".\nres.revalidate(urlPath) - Revalidate a page on demand using getStaticProps. urlPath must be a string.\n\n• res.status(code) - A function to set the status code. code must be a valid HTTP status code\n\n• res.json(body) - Sends a JSON response. body must be a serializable object\n\n• res.send(body) - Sends the HTTP response. body can be a string, an object or a Buffer\n\n• res.redirect([status,] path) - Redirects to a specified path or URL. status must be a valid HTTP status code. If not specified, status defaults to \"307\" \"Temporary redirect\".\n\n• res.revalidate(urlPath) - Revalidate a page on demand using getStaticProps. urlPath must be a string.\n\n\n### Setting the status code of a response\n\nWhen sending a response back to the client, you can set the status code of the response.\n\nThe following example sets the status code of the response to 200 (OK) and returns a message property with the value of Hello from Next.js! as a JSON response:\n\n\n### Sending a JSON response\n\nWhen sending a response back to the client you can send a JSON response, this must be a serializable object.\nIn a real world application you might want to let the client know the status of the request depending on the result of the requested endpoint.\n\nThe following example sends a JSON response with the status code 200 (OK) and the result of the async operation. It's contained in a try catch block to handle any errors that may occur, with the appropriate status code and error message caught and sent back to the client:\n\n\n### Sending a HTTP response\n\nSending an HTTP response works the same way as when sending a JSON response. The only difference is that the response body can be a string, an object or a Buffer.\n\nThe following example sends a HTTP response with the status code 200 (OK) and the result of the async operation.\n\n\n### Redirects to a specified path or URL\n\nTaking a form as an example, you may want to redirect your client to a specified path or URL once they have submitted the form.\n\nThe following example redirects the client to the / path if the form is successfully submitted:\n\n\n### Adding TypeScript types\n\nYou can make your API Routes more type-safe by importing the NextApiRequest and NextApiResponse types from next, in addition to those, you can also type your response data:\n\n> Good to know: The body of NextApiRequest is any because the client may include any payload. You should validate the type/shape of the body at runtime before using it.\n\nGood to know: The body of NextApiRequest is any because the client may include any payload. You should validate the type/shape of the body at runtime before using it.\n\n\n## Dynamic API Routes\n\nAPI Routes support dynamic routes, and follow the same file naming rules used for pages/.\n\nNow, a request to /api/post/abc will respond with the text: Post: abc.\n\n\n### Catch all API routes\n\nAPI Routes can be extended to catch all paths by adding three dots (...) inside the brackets. For example:\n\npages/api/post/[...slug].js matches /api/post/a, but also /api/post/a/b, /api/post/a/b/c and so on.\n\n• pages/api/post/[...slug].js matches /api/post/a, but also /api/post/a/b, /api/post/a/b/c and so on.\n\n> Good to know: You can use names other than slug, such as: [...param]\n\nGood to know: You can use names other than slug, such as: [...param]\n\nMatched parameters will be sent as a query parameter (slug in the example) to the page, and it will always be an array, so, the path /api/post/a will have the following query object:\n\nAnd in the case of /api/post/a/b, and any other matching path, new parameters will be added to the array, like so:\n\nFor example:\n\nNow, a request to /api/post/a/b/c will respond with the text: Post: a, b, c.\n\n\n### Optional catch all API routes\n\nCatch all routes can be made optional by including the parameter in double brackets ([[...slug]]).\n\nFor example, pages/api/post/[[...slug]].js will match /api/post, /api/post/a, /api/post/a/b, and so on.\n\nThe main difference between catch all and optional catch all routes is that with optional, the route without the parameter is also matched (/api/post in the example above).\n\nThe query objects are as follows:\n\n\n### Caveats\n\nPredefined API routes take precedence over dynamic API routes, and dynamic API routes over catch all API routes. Take a look at the following examples:\n\npages/api/post/create.js - Will match /api/post/create\npages/api/post/[pid].js - Will match /api/post/1, /api/post/abc, etc. But not /api/post/create\npages/api/post/[...slug].js - Will match /api/post/1/2, /api/post/a/b/c, etc. But not /api/post/create, /api/post/abc\n\n• Predefined API routes take precedence over dynamic API routes, and dynamic API routes over catch all API routes. Take a look at the following examples:\n\npages/api/post/create.js - Will match /api/post/create\npages/api/post/[pid].js - Will match /api/post/1, /api/post/abc, etc. But not /api/post/create\npages/api/post/[...slug].js - Will match /api/post/1/2, /api/post/a/b/c, etc. But not /api/post/create, /api/post/abc\n\npages/api/post/create.js - Will match /api/post/create\npages/api/post/[pid].js - Will match /api/post/1, /api/post/abc, etc. But not /api/post/create\npages/api/post/[...slug].js - Will match /api/post/1/2, /api/post/a/b/c, etc. But not /api/post/create, /api/post/abc\n\n• pages/api/post/create.js - Will match /api/post/create\n\n• pages/api/post/[pid].js - Will match /api/post/1, /api/post/abc, etc. But not /api/post/create\n\n• pages/api/post/[...slug].js - Will match /api/post/1/2, /api/post/a/b/c, etc. But not /api/post/create, /api/post/abc\n\n\n## Streaming responses\n\nWhile the Pages Router does support streaming responses with API Routes, we recommend incrementally adopting the App Router and using Route Handlers if you are on Next.js 14+.\n\nHere's how you can stream a response from an API Route with writeHead:\n\nWas this helpful?",
      "links": [
        "https://vercel.com/home?utm_source=next-site&utm_medium=banner&utm_campaign=docs_pages_building-your-application_routing_api-routes",
        "https://vercel.com/templates/next.js?utm_source=next-site&utm_medium=navbar&utm_campaign=next_site_nav_templates",
        "https://vercel.com/contact/sales/nextjs?utm_source=next-site&utm_medium=navbar&utm_campaign=next_site_nav_enterprise",
        "https://github.com/vercel/next.js/edit/canary/docs/02-pages/03-building-your-application/01-routing/07-api-routes.mdx",
        "https://github.com/vercel/next.js/tree/canary/examples/api-routes-middleware",
        "https://github.com/vercel/next.js/tree/canary/examples/api-routes-graphql",
        "https://github.com/vercel/next.js/tree/canary/examples/api-routes-rest",
        "https://github.com/vercel/next.js/tree/canary/examples/api-routes-cors",
        "https://developer.mozilla.org/docs/Web/HTTP/CORS",
        "https://nodejs.org/api/http.html#class-httpincomingmessage",
        "https://nodejs.org/api/http.html#class-httpserverresponse",
        "https://en.wikipedia.org/wiki/Query_string",
        "https://www.npmjs.com/package/raw-body",
        "https://docs.github.com/en/developers/webhooks-and-events/webhooks/securing-your-webhooks#validating-payloads-from-github",
        "https://github.com/visionmedia/bytes.js",
        "https://nodejs.org/api/http.html#http_class_http_serverresponse",
        "https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",
        "https://developer.mozilla.org/docs/Glossary/Serialization",
        "https://vercel.com/home?utm_source=next-site&utm_medium=footer&utm_campaign=next-website",
        "https://github.com/vercel/next.js",
        "https://x.com/nextjs",
        "https://bsky.app/profile/nextjs.org",
        "https://vercel.com/analytics?utm_source=next-site&utm_medium=footer&utm_campaign=docs_pages_building-your-application_routing_api-routes",
        "https://vercel.com/products/previews?utm_source=next-site&utm_medium=footer&utm_campaign=docs_pages_building-your-application_routing_api-routes",
        "https://vercel.com/templates/next.js/nextjs-commerce?utm_source=next-site&utm_medium=footer&utm_campaign=docs_pages_building-your-application_routing_api-routes",
        "https://vercel.com/contact/sales?utm_source=next-site&utm_medium=footer&utm_campaign=docs_pages_building-your-application_routing_api-routes",
        "https://community.vercel.com/",
        "https://github.com/vercel/next.js/releases",
        "https://vercel.com/solutions/nextjs?utm_source=next-site&utm_medium=footer&utm_campaign=docs_pages_building-your-application_routing_api-routes",
        "https://vercel.com/oss?utm_source=next-site&utm_medium=footer&utm_campaign=docs_pages_building-your-application_routing_api-routes",
        "https://github.com/vercel",
        "https://bsky.app/profile/vercel.com",
        "https://x.com/vercel",
        "https://vercel.com/legal/privacy-policy"
      ]
    }
  },
  {
    "job_id": "afab1a3a-f647-4b8a-854a-9dd9284fa7f4",
    "action": "wikipedia",
    "result": {
      "screenshot": "https://149536460382-ap-south-1-wiki-scraper-screenshots.s3.ap-south-1.amazonaws.com/screenshots/1749664534564-45c2fdc0-806d-4c90-89dc-0825d85f2686.png",
      "markdown": "# www.perplexity.ai\n\nVerify you are human by completing the action below.",
      "links": [
        "https://www.cloudflare.com/?utm_source=challenge&utm_campaign=m"
      ]
    }
  },
  {
    "job_id": "05e3b68f-14f3-4599-bc60-b58820c8eba9",
    "action": "wikipedia",
    "result": {
      "screenshot": "https://149536460382-ap-south-1-wiki-scraper-screenshots.s3.ap-south-1.amazonaws.com/screenshots/1749664709908-4bd90baf-4c1d-40da-a734-0abc73796289.png",
      "markdown": "# www.perplexity.ai\n\nVerifying you are human. This may take a few seconds.",
      "links": [
        "https://www.cloudflare.com/?utm_source=challenge&utm_campaign=m"
      ]
    }
  },
  {
    "job_id": "0e65951a-542b-47dc-9ae8-339cfeb78397",
    "action": "wikipedia",
    "result": {
      "screenshot": "https://149536460382-ap-south-1-wiki-scraper-screenshots.s3.ap-south-1.amazonaws.com/screenshots/1749664848996-d8a211f1-ca75-4ee8-9d8b-36591b105dcc.png",
      "markdown": "",
      "links": []
    }
  }
]